[
  {
    "subject": "ml",
    "level": "level2",
    "status": "passed",
    "timestamp": "2025-08-21T11:46:34.870818",
    "answers": [
      {
        "questionId": "house_prices_full_task_v1_data_inspection",
        "code": "import pandas as pd\r\n\r\ndf=pd.read_csv(\"/home/bit/Desktop/ps/ml2/backend/data/datasets/house-prices/train.csv\")\r\ndf1=pd.read_csv(\"/home/bit/Desktop/ps/ml2/backend/data/datasets/house-prices/test.csv\")\r\n\r\ndf.isnull().sum()\r\n",
        "passed": true,
        "fully_passed": true
      },
      {
        "questionId": "house_prices_full_task_v1_model_training",
        "code": "from sklearn.metrics import r2_score, mean_squared_error\r\nfrom sklearn.model_selection import train_test_split\r\nfrom sklearn.linear_model import LinearRegression\r\nimport numpy as np\r\n\r\nX=df[[\"LotArea\"]]\r\ny=df[\"SalePrice\"]\r\n\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\r\nmodel = LinearRegression()\r\nmodel.fit(X_train, y_train)\r\ny_pred = model.predict(X_test)\r\n\r\nrmse = np.sqrt(mean_squared_error(y_test, y_pred))\r\nr2 = r2_score(y_test, y_pred)\r\n\r\nprint(\"Root Mean Squared Error:\",rmse)\r\nprint(\"R-squared:\", r2)",
        "passed": true,
        "fully_passed": true
      },
      {
        "questionId": "house_prices_full_task_v1_prediction",
        "code": "import pandas as pd\r\nimport numpy as np\r\nfrom sklearn.linear_model import LinearRegression\r\n\r\ntrain_path=\"/home/bit/Desktop/ps/ml2/backend/data/datasets/house-prices/train.csv\"\r\ntest_path =\"/home/bit/Desktop/ps/ml2/backend/data/datasets/house-prices/test.csv\"\r\n\r\ntrain_df=pd.read_csv(train_path)\r\ntest_df =pd.read_csv(test_path)\r\n\r\nfeatures=[\"OverallQual\", \"GrLivArea\", \"1stFlrSF\", \"TotalBsmtSF\", \"YearBuilt\", \"FullBath\", \"GarageCars\"]\r\nfeatures=[f for f in features if f in train_df.columns and f in test_df.columns]\r\n\r\nX = train_df[features].fillna(train_df[features].median())\r\ny = train_df[\"SalePrice\"]\r\nX_test = test_df[features].fillna(train_df[features].median())\r\n\r\nmodel = LinearRegression()\r\nmodel.fit(X, y)\r\n\r\ntest_preds = model.predict(X_test)\r\ntest_preds = np.maximum(test_preds, 0)  \r\n\r\nsubmission = pd.DataFrame({\r\n    \"Id\": test_df[\"Id\"],\r\n    \"SalePrice\": test_preds\r\n})\r\n\r\nsubmission.to_csv(\"submission.csv\", index=False)\r\nprint(\"submission.csv created\")\r\nprint(submission.head())",
        "passed": true,
        "fully_passed": true
      }
    ]
  }
]